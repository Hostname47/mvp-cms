diff --git a/app/Http/Controllers/BlogController.php b/app/Http/Controllers/BlogController.php
new file mode 100644
index 0000000..773cde1
--- /dev/null
+++ b/app/Http/Controllers/BlogController.php
@@ -0,0 +1,22 @@
+<?php
+
+namespace App\Http\Controllers;
+
+use Illuminate\Http\Request;
+use App\Models\Blog;
+
+class BlogController extends Controller
+{
+    public function store(Request $request) {
+        $data = $request->validate([
+            'title'=>'required|min:2|max:1200',
+            'meta_title'=>'required|min:2|max:1200',
+            'slug'=>'required|min:2|max:1200',
+            'content'=>'required|min:2|max:50000',
+            'user_id'=>'required|exists:users,id',
+            'category_id'=>'required|exists:categories,id',
+        ]);
+
+        Blog::create($data);
+    }
+}
diff --git a/app/Models/Blog.php b/app/Models/Blog.php
new file mode 100644
index 0000000..7defcec
--- /dev/null
+++ b/app/Models/Blog.php
@@ -0,0 +1,13 @@
+<?php
+
+namespace App\Models;
+
+use Illuminate\Database\Eloquent\Factories\HasFactory;
+use Illuminate\Database\Eloquent\Model;
+
+class Blog extends Model
+{
+    use HasFactory;
+
+    protected $guarded = [];
+}
diff --git a/app/Models/Category.php b/app/Models/Category.php
new file mode 100644
index 0000000..c6f0e65
--- /dev/null
+++ b/app/Models/Category.php
@@ -0,0 +1,13 @@
+<?php
+
+namespace App\Models;
+
+use Illuminate\Database\Eloquent\Factories\HasFactory;
+use Illuminate\Database\Eloquent\Model;
+
+class Category extends Model
+{
+    use HasFactory;
+
+    public $timestamps = false;
+}
diff --git a/database/factories/CategoryFactory.php b/database/factories/CategoryFactory.php
new file mode 100644
index 0000000..e9e161e
--- /dev/null
+++ b/database/factories/CategoryFactory.php
@@ -0,0 +1,23 @@
+<?php
+
+namespace Database\Factories;
+
+use Illuminate\Database\Eloquent\Factories\Factory;
+
+class CategoryFactory extends Factory
+{
+    /**
+     * Define the model's default state.
+     *
+     * @return array
+     */
+    public function definition()
+    {
+        return [
+            'title' => $this->faker->sentence(),
+            'meta_title' => $this->faker->sentence(),
+            'slug' => $this->faker->slug(),
+            'description' => $this->faker->sentence(),
+        ];
+    }
+}
diff --git a/database/factories/UserFactory.php b/database/factories/UserFactory.php
index a3eb239..c0e84ba 100644
--- a/database/factories/UserFactory.php
+++ b/database/factories/UserFactory.php
@@ -15,10 +15,12 @@ class UserFactory extends Factory
     public function definition()
     {
         return [
-            'name' => $this->faker->name(),
+            'firstname' => $this->faker->name(),
+            'lastname' => $this->faker->name(),
+            'username' => $this->faker->unique()->username(),
             'email' => $this->faker->unique()->safeEmail(),
             'email_verified_at' => now(),
-            'password' => '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // password
+            'password' => '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi',
             'remember_token' => Str::random(10),
         ];
     }
diff --git a/database/migrations/2014_10_12_000000_create_users_table.php b/database/migrations/2014_10_12_000000_create_users_table.php
index 621a24e..04ca027 100644
--- a/database/migrations/2014_10_12_000000_create_users_table.php
+++ b/database/migrations/2014_10_12_000000_create_users_table.php
@@ -15,7 +15,9 @@ public function up()
     {
         Schema::create('users', function (Blueprint $table) {
             $table->id();
-            $table->string('name');
+            $table->string('firstname');
+            $table->string('lastname');
+            $table->string('username');
             $table->string('email')->unique();
             $table->timestamp('email_verified_at')->nullable();
             $table->string('password');
diff --git a/database/migrations/2022_03_21_170806_create_categories_table.php b/database/migrations/2022_03_21_170806_create_categories_table.php
new file mode 100644
index 0000000..d372d15
--- /dev/null
+++ b/database/migrations/2022_03_21_170806_create_categories_table.php
@@ -0,0 +1,37 @@
+<?php
+
+use Illuminate\Database\Migrations\Migration;
+use Illuminate\Database\Schema\Blueprint;
+use Illuminate\Support\Facades\Schema;
+
+class CreateCategoriesTable extends Migration
+{
+    /**
+     * Run the migrations.
+     *
+     * @return void
+     */
+    public function up()
+    {
+        Schema::create('categories', function (Blueprint $table) {
+            $table->id();
+            $table->string('title');
+            $table->string('meta_title'); // SEO
+            $table->string('slug');
+            $table->text('description');
+
+            $table->unsignedBigInteger('parent_category_id')->nullable();
+            $table->foreign('parent_category_id')->references('id')->on('categories');
+        });
+    }
+
+    /**
+     * Reverse the migrations.
+     *
+     * @return void
+     */
+    public function down()
+    {
+        Schema::dropIfExists('categories');
+    }
+}
diff --git a/database/migrations/2022_03_21_170934_create_blogs_table.php b/database/migrations/2022_03_21_170934_create_blogs_table.php
new file mode 100644
index 0000000..40daa18
--- /dev/null
+++ b/database/migrations/2022_03_21_170934_create_blogs_table.php
@@ -0,0 +1,42 @@
+<?php
+
+use Illuminate\Database\Migrations\Migration;
+use Illuminate\Database\Schema\Blueprint;
+use Illuminate\Support\Facades\Schema;
+
+class CreateBlogsTable extends Migration
+{
+    /**
+     * Run the migrations.
+     *
+     * @return void
+     */
+    public function up()
+    {
+        Schema::create('blogs', function (Blueprint $table) {
+            $table->id();
+            $table->text('title');
+            $table->text('meta_title');
+            $table->text('slug');
+            $table->longText('content');
+            $table->UnsignedBigInteger('user_id');
+            $table->UnsignedBigInteger('category_id');
+
+            $table->foreign('user_id')->references('id')->on('users');
+            $table->foreign('category_id')->references('id')->on('categories');
+            $table->timestamps();
+            $table->timestamp('published_at')->default(\DB::raw('CURRENT_TIMESTAMP'));
+            $table->string('status')->default('draft');
+        });
+    }
+
+    /**
+     * Reverse the migrations.
+     *
+     * @return void
+     */
+    public function down()
+    {
+        Schema::dropIfExists('blogs');
+    }
+}
diff --git a/routes/web.php b/routes/web.php
index b130397..01ad420 100644
--- a/routes/web.php
+++ b/routes/web.php
@@ -1,6 +1,7 @@
 <?php

 use Illuminate\Support\Facades\Route;
+use App\Http\Controllers\BlogController;

 /*
 |--------------------------------------------------------------------------
@@ -13,6 +14,4 @@
 |
 */

-Route::get('/', function () {
-    return view('welcome');
-});
+Route::post('/blogs', [BlogController::class, 'store']);
diff --git a/tests/Feature/BlogTest.php b/tests/Feature/BlogTest.php
new file mode 100644
index 0000000..bf113f1
--- /dev/null
+++ b/tests/Feature/BlogTest.php
@@ -0,0 +1,40 @@
+<?php
+
+namespace Tests\Feature;
+
+use Illuminate\Foundation\Testing\DatabaseTransactions;
+use Illuminate\Foundation\Testing\WithFaker;
+use Tests\TestCase;
+use App\Models\{User, Category, Blog};
+
+class BlogTest extends TestCase
+{
+    use DatabaseTransactions;
+
+    protected $user;
+
+    public function setUp() : void {
+        parent::setUp();
+
+        /** Some common resources between tests */
+    }
+
+    /** @test */
+    public function creating_a_blog() {
+        $this->withoutExceptionHandling();
+
+        $user = User::factory()->create();
+        $category = Category::factory()->create();
+
+        $this->assertCount(0, Blog::all());
+        $this->post('/blogs', [
+            'title'=>'cool title',
+            'meta_title'=>'cool-title',
+            'slug'=>'cool title',
+            'content'=>'hello world',
+            'user_id'=>$user->id,
+            'category_id'=>$category->id
+        ]);
+        $this->assertCount(1, Blog::all());
+    }
+}
diff --git a/tests/Feature/ExampleTest.php b/tests/Feature/ExampleTest.php
deleted file mode 100644
index db2ac83..0000000
--- a/tests/Feature/ExampleTest.php
+++ /dev/null
@@ -1,17 +0,0 @@
-<?php
-
-namespace Tests\Feature;
-
-use Illuminate\Foundation\Testing\RefreshDatabase;
-use Illuminate\Foundation\Testing\DatabaseTransactions;
-use Tests\TestCase;
-
-class ExampleTest extends TestCase
-{
-    use DatabaseTransactions;
-
-    public function test_example()
-    {
-        $this->assertTrue(true);
-    }
-}
